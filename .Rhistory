)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Waffle Chart of Companies by Status",
subtitle = "Distribution of company statuses",
caption = "Source: Your Data"
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom"
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom"
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom"
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = Inf, y = Inf,  # Position at the bottom-right corner
label = "1 tile = 1%",  # Text to display
hjust = 1.1, vjust = 2,  # Adjust position relative to the corner
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 10.5, y = 10.5,  # Position slightly outside the grid
label = "1 tile = 1%",  # Text to display
hjust = 0, vjust = 0,  # Align text to the top-left of the point
color = "gray19",      # Match the text color to your theme
size = 4               # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 5, y = 11,  # Position below the grid and centered
label = "1 tile = 1%",  # Text to display
hjust = 0.5, vjust = 0,  # Center the text horizontally
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 5, y = 11,  # Position below the grid and centered
label = "1 tile = 1%",  # Text to display
hjust = 0.2, vjust = 0,  # Center the text horizontally
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 5, y = 30,  # Position below the grid and centered
label = "1 tile = 1%",  # Text to display
hjust = 0.2, vjust = 0,  # Center the text horizontally
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 5, y = 11,  # Position below the grid and centered
label = "1 tile = 1%",  # Text to display
hjust = 0.2, vjust = 0,  # Center the text horizontally
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status | □ = 1%",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
) +
annotate(
"text",
x = 5, y = 11,  # Position below the grid and centered
label = "1 tile = 1%",  # Text to display
hjust = 0.2, vjust = 0,  # Center the text horizontally
color = "gray19",        # Match the text color to your theme
size = 4                 # Adjust text size
)
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status | □ = 1%",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status | One Tile = 1%",
fill = "Status"  # Legend title
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank(),  # Remove axis ticks
axis.line = element_blank()    # Remove axis lines
)
p
p <- ggplot(df, aes(x = x, y = y, fill = Categories)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = "reverse") +
scale_fill_manual(values = orange_palette(length(unique(df$Categories)))) +
labs(
title = "Proportion of Companies by Status | One Tile = 1%",
fill = "Status"
) +
custom_theme +
theme(
plot.margin = unit(c(0.2, 0.1, 0.2, 0.1), units = "in"),
legend.position = "bottom",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank()
)
p
library("ggplot2")
library("dplyr")
library("png")
library("grid")
library("tidyr")
library("treemapify")
library("patchwork")
companies <- read.csv("data/companies.csv")
badges <- read.csv("data/badges.csv")
founders <- read.csv("data/founders.csv")
industries <- read.csv("data/industries.csv")
prior_companies <- read.csv("data/prior_companies.csv")
regions <- read.csv("data/regions.csv")
schools <- read.csv("data/schools.csv")
tags <- read.csv("data/tags.csv")
regions
unique(regions$country)
library("maps")
company_counts <- regions %>%
group_by(country) %>%
summarise(n_companies = n(), .groups = 'drop')
map_data <- map_data("world") %>%
left_join(company_counts, by = c("region" = "country"))
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey50") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey50") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
orange_palette <- colorRampPalette(c("#FD5612", "#FEF5EF"))
custom_theme <- theme(
plot.background = element_rect(fill = "white"), # White background for the entire plot
panel.background = element_rect(fill = "white"), # White background for the plotting area
panel.grid.major = element_line(color = "gray90"), # Light gray major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
axis.text = element_text(color = "gray19"), # Black axis text
axis.title = element_text(color = "gray19"), # Black axis title
plot.title = element_text(color = "gray19", face = "bold", hjust = 0.5), # Black plot title
legend.background = element_rect(fill = "white"), # White legend background
legend.text = element_text(color = "gray19"), # Black legend text
legend.title = element_text(color = "gray19"), # Black legend title
axis.line = element_line(color = "lightgray"), # Light gray axis lines (tick lines)
axis.ticks = element_line(color = "lightgray") # Light gray axis ticks
)
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey50") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "grey50") + +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(), na.value = "white") + +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(company_counts), na.value = "white") + +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(15), na.value = "white") + +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(15), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
orange_palette <- colorRampPalette(c("#FEF5EF", "#FD5612"))
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(15), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(15), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme +
theme_minimal()
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
custom_theme
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
theme(
axis.text = element_blank(),        # Remove axis text
axis.title = element_blank(),       # Remove axis titles
axis.ticks = element_blank(),       # Remove axis ticks
panel.grid = element_blank(),       # Remove grid lines
legend.position = c(0.95, 0.1),     # Move legend to bottom right (inside plot)
legend.justification = c(1, 0),     # Anchor legend to bottom right
legend.background = element_rect(fill = "white", color = "black"), # Add background to legend
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")   # Center the title
)
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(0.05, 0.1),
legend.justification = c(1, 0),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(0.25, 0.1),
legend.justification = c(1, 0),
legend.background = element_rect(fill = "white", color = "gray19"),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
guides(fill = guide_colorbar(
direction = "horizontal",  # Make the legend bar horizontal
barwidth = unit(5, "cm"),  # Adjust the width of the legend bar
barheight = unit(0.3, "cm"), # Adjust the height of the legend bar
title.position = "top",    # Position the legend title above the bar
title.hjust = 0.5          # Center the legend title
)) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(0.25, 0.1),
legend.justification = c(1, 0),
legend.background = element_rect(fill = "white", color = "gray19"),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
guides(fill = guide_colorbar(
direction = "horizontal",
barwidth = unit(5, "cm"),
barheight = unit(0.3, "cm"),
title.position = "top",
title.hjust = 0.5
)) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(0.25, 0.2),
legend.justification = c(1, 0),
legend.background = element_rect(fill = "white", color = "gray19"),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
p <- ggplot(map_data, aes(x = long, y = lat, group = group, fill = n_companies)) +
geom_polygon(color = "black") +
scale_fill_gradientn(colors = orange_palette(10), na.value = "white") +
labs(title = "Number of Companies by Country",
fill = "Number of Companies") +
guides(fill = guide_colorbar(
direction = "horizontal",
barwidth = unit(5, "cm"),
barheight = unit(0.3, "cm"),
title.position = "top",
title.hjust = 0.5
)) +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.position = c(0.25, 0.2),
legend.justification = c(1, 0),
legend.background = element_rect(fill = "white", color = "gray19"),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
p
