geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void()
# Plot the network graph
ggraph(layout) +
geom_edge_link(edge_colour = "gray50") +  # Draw edges
geom_node_point(aes(size = log(size)), color = "lightblue") +  # Scale node size
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
# Plot the network graph
ggraph(layout) +
geom_edge_link(edge_colour = "gray50") +  # Draw edges
geom_node_point(aes(size = log(size)*3), color = "lightblue") +  # Scale node size
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
# Plot the network graph
ggraph(layout) +
geom_edge_link(edge_colour = "gray50") +  # Draw edges
geom_node_point(aes(size = log(size)*10), color = "lightblue") +  # Scale node size
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
# Plot the network graph
ggraph(layout) +
geom_edge_link(edge_colour = "gray50") +  # Draw edges
geom_node_point(aes(size = log(size)), color = "#FD5612") +  # Scale node size
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
# Manually set layout to ensure "YC" is in the center
layout <- create_layout(graph, layout = "circle")
layout$x[layout$name == "YC"] <- 0  # Center "YC" on the x-axis
layout$y[layout$name == "YC"] <- 0  # Center "YC" on the y-axis
ggraph(layout) +
geom_edge_link(
aes(width = width),  # Map edge width to the count
edge_colour = "gray50",
arrow = arrow(length = unit(3, "mm"))  # Add arrows
) +
geom_node_point(aes(size = log(size)), color = "#FD5612") +  # Scale node size
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +  # Add labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
company_counts <- prior_companies %>%
group_by(company) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count))
# Separate top 20 and aggregate the rest as "Other"
top_20 <- head(company_counts, 20)
other <- data.frame(
company = "Other",
count = sum(tail(company_counts, nrow(company_counts) - 20)$count)
)
# Combine top 20 and "Other"
company_counts <- bind_rows(top_20, other)
# Create a network structure
edges <- data.frame(
from = "YC",  # Central node
to = company_counts$company,  # Nodes for each company
width = company_counts$count  # Map edge width to the count
)
# Combine nodes and edges
nodes <- data.frame(
name = c("YC", company_counts$company),
size = c(1, company_counts$count)  # Size of nodes
)
# Create an igraph object
graph <- graph_from_data_frame(edges, vertices = nodes)
# Manually set layout to ensure "YC" is in the center
layout <- create_layout(graph, layout = "circle")
layout$x[layout$name == "YC"] <- 0  # Center "YC" on the x-axis
layout$y[layout$name == "YC"] <- 0  # Center "YC" on the y-axis
# Add edge width information to the layout
layout <- layout %>%
activate(edges) %>%  # Activate the edges
mutate(width = edges$width)  # Add the width column
library("ggalluvial")
company_counts <- prior_companies %>%
group_by(company) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(10)
# Merge with status information
sankey_data <- company_counts %>%
left_join(companies, by = "company") %>%
select(company, status, count)
companies
##################################################################################
# network plots of schools and previous companies
##################################################################################
founders
##################################################################################
# network plots of schools and previous companies
##################################################################################
prior_companies
##################################################################################
# network plots of schools and previous companies
##################################################################################
companies
##################################################################################
# network plots of schools and previous companies
##################################################################################
colnames(companies)
colnames(founders)
colnames(prior_companies)
colnames(schools)
data <- founders %>%
left_join(companies, by = c("company_slug" = "slug")) %>%  # Join founders with companies
left_join(prior_companies, by = "hnid") %>%  # Join with prior_companies
left_join(schools, by = "hnid")  # Join with schools
top_schools <- data %>%
group_by(school) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(10)
# Get top 10 companies
top_companies <- data %>%
group_by(company) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(10)
# Filter data to include only top 10 schools and companies
sankey_data <- data %>%
filter(school %in% top_schools$school & company %in% top_companies$company) %>%
select(school, company, status)
ggplot(sankey_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = 1)) +
geom_alluvium(aes(fill = school), width = 1/12) +  # Flow between nodes
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +  # Labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
library("networkD3")
aggregated_data <- sankey_data %>%
group_by(school, company, status) %>%
summarise(count = n(), .groups = 'drop')
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +  # Labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
top_schools <- data %>%
group_by(school) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(5)
# Get top 10 companies
top_companies <- data %>%
group_by(company) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(5)
# Filter data to include only top 10 schools and companies
sankey_data <- data %>%
filter(school %in% top_schools$school & company %in% top_companies$company) %>%
select(school, company, status)
aggregated_data <- sankey_data %>%
group_by(school, company, status) %>%
summarise(count = n(), .groups = 'drop')
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +  # Labels
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none") +
custom_theme
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = orange_palette()), color = "grey", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/4) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "#FD5612"), color = "#FD5612", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "#FEF5EF"), color = "#FD5612", width = 1/12) +
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
theme_void() +
theme(legend.position = "none")
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3,
angle = 90,  # Rotate labels vertically
vjust = 0.5,  # Center labels vertically
hjust = 1  # Align labels to the right
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3,
vjust = 0.5,  # Center labels vertically
hjust = 1  # Align labels to the right
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3,
vjust = 0.5,  # Center labels vertically
hjust = -1  # Align labels to the right
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "lightgray", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum))
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "grey", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum))
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum))
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3,
angle = 90
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/6) +  # Wider flows
geom_stratum(width = 1/6, fill = "#FEF5EF", color = "black") +  # Wider stratum
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1) +  # Wider flows
geom_stratum(width = 1/6, fill = "#FEF5EF", color = "black") +  # Wider stratum
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/12, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/4, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 0.2, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/2, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
data <- founders %>%
left_join(companies, by = c("company_slug" = "slug")) %>%
left_join(prior_companies, by = "hnid") %>%
left_join(schools, by = "hnid")
data <- data %>%
mutate(
school = case_when(
school == "Massachusetts Institute of Technology" ~ "MIT",
school == "University of California, Berkeley" ~ "University of California",
TRUE ~ school
)
)
top_schools <- data %>%
group_by(school) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(5)
top_companies <- data %>%
group_by(company) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
head(5)
sankey_data <- data %>%
filter(school %in% top_schools$school & company %in% top_companies$company) %>%
select(school, company, status)
aggregated_data <- sankey_data %>%
group_by(school, company, status) %>%
summarise(count = n(), .groups = 'drop')
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/2, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/4, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/3, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 10/35, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/4, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 1/2, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +  # Grey flows
geom_stratum(width = 10/25, fill = "#FEF5EF", color = "black") +  # Nodes
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +  # Remove background and axes
theme(legend.position = "none")  # Hide the legend
ggplot(aggregated_data,
aes(axis1 = school, axis2 = company, axis3 = status, y = count)) +
geom_alluvium(aes(fill = "grey"), color = "#FD5612", width = 1/12) +
geom_stratum(width = 10/25, fill = "#FEF5EF", color = "black") +
geom_text(
stat = "stratum",
aes(label = after_stat(stratum)),
size = 3
) +
theme_void() +
theme(legend.position = "none")
